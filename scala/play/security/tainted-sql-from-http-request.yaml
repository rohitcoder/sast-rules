rules:
- id: tainted-sql-from-http-request__whrrh
  languages:
  - scala
  message: User data flows into this manually-constructed SQL string. User data can
    be safely inserted into SQL strings using prepared statements or an object-relational
    mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL
    injection, which could let an attacker steal or manipulate data from the database.
    Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.
  metadata:
    category: security
    confidence: HIGH
    cwe:
    - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command
      (''SQL Injection'')'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: MEDIUM
    likelihood: HIGH
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html
    subcategory:
    - vuln
    technology:
    - scala
    - play
  mode: taint
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: '"$SQLSTR" + ...

              '
          - pattern: '"$SQLSTR".format(...)

              '
          - patterns:
            - pattern-inside: '$SB = new StringBuilder("$SQLSTR");

                ...

                '
            - pattern: $SB.append(...)
          - patterns:
            - pattern-inside: '$VAR = "$SQLSTR"

                ...

                '
            - pattern: $VAR += ...
        - metavariable-regex:
            metavariable: $SQLSTR
            regex: (?i)(select|delete|insert|create|update|alter|drop)\b
      - patterns:
        - pattern: s"..."
        - pattern-regex: '.*\b(?i)(select|delete|insert|create|update|alter|drop)\b.*

            '
    - pattern-not-inside: println(...)
  pattern-sources:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: $REQ
        - pattern-either:
          - pattern-inside: "Action {\n  $REQ: Request[$T] => \n    ...\n}\n"
          - pattern-inside: "Action(...) {\n  $REQ: Request[$T] => \n    ...\n}\n"
          - pattern-inside: "Action.async {\n  $REQ: Request[$T] => \n    ...\n}\n"
          - pattern-inside: "Action.async(...) {\n  $REQ: Request[$T] => \n    ...\n\
              }\n"
      - patterns:
        - pattern: $PARAM
        - pattern-either:
          - pattern-inside: "def $CTRL(..., $PARAM: $TYPE, ...) = Action {\n  ...\n\
              }\n"
          - pattern-inside: "def $CTRL(..., $PARAM: $TYPE, ...) = Action(...) {\n\
              \  ...\n}\n"
          - pattern-inside: "def $CTRL(..., $PARAM: $TYPE, ...) = Action.async {\n\
              \  ...\n}\n"
          - pattern-inside: "def $CTRL(..., $PARAM: $TYPE, ...) = Action.async(...)\
              \ {\n  ...\n}\n"
  severity: ERROR
