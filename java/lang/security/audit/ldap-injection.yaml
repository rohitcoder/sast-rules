rules:
- id: ldap-injection__ghnhl
  languages:
  - java
  message: Detected non-constant data passed into an LDAP query. If this data can
    be controlled by an external user, this is an LDAP injection. Ensure data passed
    to an LDAP query is not controllable; or properly sanitize the data.
  metadata:
    asvs:
      control_id: 5.3.7 Injection
      control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements
      section: 'V5: Validation, Sanitization and Encoding Verification Requirements'
      version: '4'
    category: security
    confidence: LOW
    cwe:
    - 'CWE-90: Improper Neutralization of Special Elements used in an LDAP Query (''LDAP
      Injection'')'
    impact: HIGH
    likelihood: LOW
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    source-rule-url: https://find-sec-bugs.github.io/bugs.htm#LDAP_INJECTION
    subcategory:
    - audit
    technology:
    - java
  patterns:
  - pattern-either:
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  InitialDirContext $CTX = ...;\n\
        \  ...\n}\n"
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  DirContext $CTX = ...;\n  ...\n\
        }\n"
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  InitialLdapContext $CTX = ...;\n\
        \  ...\n}\n"
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  LdapContext $CTX = ...;\n  ...\n\
        }\n"
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  LdapCtx $CTX = ...;\n  ...\n}\n"
    - pattern-inside: "$X $METHOD(...) {\n  ...\n  EventDirContext $CTX = ...;\n \
        \ ...\n}\n"
  - pattern: "$X $METHOD(...) {\n  ...\n  $CTX.search($Y,$INPUT,...);\n  ...\n}\n"
  - pattern-not: "$X $METHOD(...) {\n  ...\n  $CTX.search($Y,\"...\",...);\n  ...\n\
      }\n"
  severity: WARNING
