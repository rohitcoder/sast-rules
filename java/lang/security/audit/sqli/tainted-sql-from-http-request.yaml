rules:
- id: tainted-sql-from-http-request__upwrq
  languages:
  - java
  message: Detected input from a HTTPServletRequest going into a SQL sink or statement.
    This could lead to SQL injection if variables in the SQL statement are not properly
    sanitized. Use parameterized SQL queries or properly sanitize user input instead.
  metadata:
    category: security
    confidence: MEDIUM
    cwe:
    - 'CWE-89: Improper Neutralization of Special Elements used in an SQL Command
      (''SQL Injection'')'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: HIGH
    likelihood: HIGH
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    subcategory:
    - vuln
    technology:
    - sql
    - java
  mode: taint
  pattern-sanitizers:
  - patterns:
    - focus-metavariable: $...X
    - pattern-either:
      - pattern: <... $...X != $...Y ...>
      - pattern: <... $...Y != $...X ...>
      - pattern: <... $...X == $...Y ...>
      - pattern: <... $...Y == $...X ...>
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: "(java.sql.CallableStatement $STMT) = ...; \n"
      - pattern: '(java.sql.Statement $STMT) = ...;

          ...

          $OUTPUT = $STMT.$FUNC(...);

          '
      - pattern: '(java.sql.PreparedStatement $STMT) = ...;

          '
      - pattern: '$VAR = $CONN.prepareStatement(...)

          '
      - pattern: '$PATH.queryForObject(...);

          '
      - pattern: '(java.util.Map<String, Object> $STMT) = $PATH.queryForMap(...);

          '
      - pattern: '(org.springframework.jdbc.support.rowset.SqlRowSet $STMT) = ...;

          '
      - patterns:
        - pattern-inside: '(String $SQL) = "$SQLSTR" + ...;

            ...

            '
        - pattern: $PATH.$SQLCMD(..., $SQL, ...);
        - metavariable-regex:
            metavariable: $SQLSTR
            regex: (?i)(^SELECT.* | ^INSERT.* | ^UPDATE.*)
        - metavariable-regex:
            metavariable: $SQLCMD
            regex: (execute|query|executeUpdate)
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: "(HttpServletRequest $REQ).$REQFUNC(...) \n"
      - patterns:
        - pattern-inside: "(javax.servlet.http.Cookie[] $COOKIES) = (HttpServletRequest\
            \ $REQ).getCookies(...);\n...\nfor (javax.servlet.http.Cookie $COOKIE:\
            \ $COOKIES) {\n  ...\n}\n"
        - pattern: '$COOKIE.getValue(...)

            '
  severity: WARNING
