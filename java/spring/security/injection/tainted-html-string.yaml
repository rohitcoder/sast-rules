rules:
- id: tainted-html-string__iitmr
  languages:
  - java
  message: Detected user input flowing into a manually constructed HTML string. You
    may be accidentally bypassing secure methods of rendering HTML by manually constructing
    HTML and this could create a cross-site scripting vulnerability, which could let
    attackers steal sensitive user data. To be sure this is safe, check that the HTML
    is rendered safely. You can use the OWASP ESAPI encoder if you must render user
    data.
  metadata:
    category: security
    confidence: MEDIUM
    cwe:
    - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
      Scripting'')'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: MEDIUM
    interfile: true
    likelihood: HIGH
    owasp:
    - A07:2017 - Cross-Site Scripting (XSS)
    - A03:2021 - Injection
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html
    subcategory:
    - vuln
    technology:
    - java
    - spring
  mode: taint
  pattern-propagators:
  - from: $...TAINTED
    pattern: (StringBuilder $SB).append($...TAINTED)
    to: $SB
  - from: $...TAINTED
    pattern: $VAR += $...TAINTED
    to: $VAR
  pattern-sanitizers:
  - pattern-either:
    - pattern: Encode.forHtml(...)
    - pattern: (PolicyFactory $POLICY).sanitize(...)
    - pattern: (AntiSamy $AS).scan(...)
    - pattern: JSoup.clean(...)
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: new ResponseEntity<>($PAYLOAD, ...)
      - pattern: new ResponseEntity<$ERROR>($PAYLOAD, ...)
      - pattern: ResponseEntity. ... .body($PAYLOAD)
      - patterns:
        - pattern: 'ResponseEntity.$RESPFUNC($PAYLOAD). ...

            '
        - metavariable-regex:
            metavariable: $RESPFUNC
            regex: ^(ok|of)$
    - focus-metavariable: $PAYLOAD
    requires: CONCAT
  pattern-sources:
  - label: INPUT
    patterns:
    - pattern-either:
      - pattern-inside: "$METHODNAME(..., @$REQ(...) $TYPE $SOURCE,...) {\n  ...\n\
          }\n"
      - pattern-inside: "$METHODNAME(..., @$REQ $TYPE $SOURCE,...) {\n  ...\n}\n"
    - metavariable-regex:
        metavariable: $REQ
        regex: (RequestBody|PathVariable|RequestParam)
    - focus-metavariable: $SOURCE
  - by-side-effect: true
    label: CONCAT
    patterns:
    - pattern-either:
      - pattern: '"$HTMLSTR" + ...

          '
      - pattern: '"$HTMLSTR".concat(...)

          '
      - patterns:
        - pattern-inside: 'StringBuilder $SB = new StringBuilder("$HTMLSTR");

            ...

            '
        - pattern: $SB.append(...)
      - patterns:
        - pattern-inside: '$VAR = "$HTMLSTR";

            ...

            '
        - pattern: $VAR += ...
      - pattern: String.format("$HTMLSTR", ...)
      - patterns:
        - pattern-inside: 'String $VAR = "$HTMLSTR";

            ...

            '
        - pattern: String.format($VAR, ...)
    - metavariable-regex:
        metavariable: $HTMLSTR
        regex: ^<\w+
    requires: INPUT
  severity: ERROR
