rules:
- id: nan-injection__xgqca
  languages:
  - python
  message: Found user input going directly into typecast for bool(), float(), or complex().
    This allows  an attacker to inject Python's not-a-number (NaN) into the typecast.
    This results in undefind behavior, particularly when doing comparisons. Either
    cast to a different type, or add a guard checking for all capitalizations of the
    string 'nan'.
  metadata:
    category: security
    confidence: MEDIUM
    cwe:
    - 'CWE-704: Incorrect Type Conversion or Cast'
    impact: MEDIUM
    likelihood: MEDIUM
    references:
    - https://discuss.python.org/t/nan-breaks-min-max-and-sorting-functions-a-solution/2868
    - https://blog.bitdiscovery.com/2021/12/python-nan-injection/
    subcategory:
    - vuln
    technology:
    - django
  mode: taint
  pattern-sanitizers:
  - not_conflicting: true
    pattern: $ANYTHING(...)
  pattern-sinks:
  - patterns:
    - pattern-either:
      - pattern: float(...)
      - pattern: bool(...)
      - pattern: complex(...)
    - pattern-not-inside: "if $COND:\n  ...\n...\n"
  pattern-sources:
  - patterns:
    - pattern-inside: "def $FUNC(request, ...):\n  ...\n"
    - pattern-either:
      - pattern: request.$PROPERTY.get(...)
      - pattern: request.$PROPERTY[...]
  severity: ERROR
