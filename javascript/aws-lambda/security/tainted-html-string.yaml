rules:
- id: tainted-html-string__bsoos
  languages:
  - javascript
  - typescript
  message: Detected user input flowing into a manually constructed HTML string. You
    may be accidentally bypassing secure methods of rendering HTML by manually constructing
    HTML and this could create a cross-site scripting vulnerability, which could let
    attackers steal sensitive user data. To be sure this is safe, check that the HTML
    is rendered safely. Otherwise, use templates which will safely render HTML instead.
  metadata:
    category: security
    confidence: MEDIUM
    cwe:
    - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
      Scripting'')'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: MEDIUM
    likelihood: MEDIUM
    owasp:
    - A07:2017 - Cross-Site Scripting (XSS)
    - A03:2021 - Injection
    references:
    - https://owasp.org/Top10/A03_2021-Injection
    subcategory:
    - vuln
    technology:
    - aws-lambda
  mode: taint
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern-either:
          - pattern: '"$HTMLSTR" + $EXPR

              '
          - pattern: '"$HTMLSTR".concat(...)

              '
          - pattern: $UTIL.format($HTMLSTR, ...)
          - pattern: format($HTMLSTR, ...)
        - metavariable-pattern:
            language: generic
            metavariable: $HTMLSTR
            pattern: <$TAG ...
      - patterns:
        - pattern: '`...${...}...`

            '
        - pattern-regex: '.*<\w+.*

            '
    - pattern-not-inside: 'console.$LOG(...)

        '
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern-inside: "exports.handler = function ($EVENT, ...) {\n  ...\n}\n"
      - pattern-inside: 'function $FUNC ($EVENT, ...) {...}

          ...

          exports.handler = $FUNC

          '
      - pattern-inside: '$FUNC = function ($EVENT, ...) {...}

          ...

          exports.handler = $FUNC

          '
    - pattern: $EVENT
  severity: WARNING
