rules:
- id: hardcoded-jwt-secret__bkepq
  languages:
  - javascript
  - typescript
  message: A hard-coded credential was detected. It is not recommended  to store credentials
    in source-code, as this risks secrets being leaked and used by either an internal
    or external malicious adversary.  It is recommended to use environment variables
    to  securely provide credentials or retrieve credentials from  a secure vault
    or HSM (Hardware Security Module).
  metadata:
    asvs:
      control_id: 3.5.2 Static API keys or secret
      control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management
      section: 'V3: Session Management Verification Requirements'
      version: '4'
    category: security
    confidence: HIGH
    cwe:
    - 'CWE-798: Use of Hard-coded Credentials'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: MEDIUM
    interfile: true
    likelihood: HIGH
    owasp:
    - A07:2021 - Identification and Authentication Failures
    references:
    - https://cheatsheetseries.owasp.org/cheatsheets/Secrets_Management_CheatSheet.html
    subcategory:
    - vuln
    technology:
    - jose
    - jwt
    - secrets
  options:
    symbolic_propagation: true
  patterns:
  - pattern-inside: 'var $JOSE = require("jose");

      ...

      '
  - pattern-either:
    - pattern-inside: 'var {JWT} = $JOSE;

        ...

        '
    - pattern-inside: 'var {JWK, JWT} = $JOSE;

        ...

        '
  - pattern-either:
    - pattern: 'JWT.verify($P, "...", ...);

        '
    - pattern: 'JWT.sign($P, "...", ...);

        '
    - pattern: "JWT.verify($P, JWK.asKey(\"...\"), ...);     \n"
    - pattern: '$JWT.sign($P, JWK.asKey("..."), ...);

        '
  severity: WARNING
