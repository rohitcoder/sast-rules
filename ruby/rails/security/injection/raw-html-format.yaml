rules:
- id: raw-html-format__khghp
  languages:
  - ruby
  message: Detected user input flowing into a manually constructed HTML string. You
    may be accidentally bypassing secure methods of rendering HTML by manually constructing
    HTML and this could create a cross-site scripting vulnerability, which could let
    attackers steal sensitive user data. Use the `render template` and make template
    files which will safely render HTML instead, or inspect that the HTML is absolutely
    rendered safely with a function like `sanitize`.
  metadata:
    category: security
    confidence: MEDIUM
    cwe:
    - 'CWE-79: Improper Neutralization of Input During Web Page Generation (''Cross-site
      Scripting'')'
    cwe2021-top25: true
    cwe2022-top25: true
    impact: MEDIUM
    likelihood: HIGH
    owasp:
    - A07:2017 - Cross-Site Scripting (XSS)
    - A03:2021 - Injection
    references:
    - https://www.netsparker.com/blog/web-security/preventing-xss-ruby-on-rails-web-applications/
    - https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html
    subcategory:
    - vuln
    technology:
    - rails
  mode: taint
  pattern-sanitizers:
  - pattern-either:
    - pattern: sanitize(...)
    - pattern: strip_tags(...)
  pattern-sinks:
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: '$HTMLSTR

            '
        - pattern-regex: <\w+.*
      - patterns:
        - pattern-either:
          - pattern: Kernel::sprintf("$HTMLSTR", ...)
          - pattern: '"$HTMLSTR" + $EXPR

              '
          - pattern: '"$HTMLSTR" % $EXPR

              '
        - metavariable-pattern:
            language: generic
            metavariable: $HTMLSTR
            pattern: <$TAG ...
  pattern-sources:
  - patterns:
    - pattern-either:
      - pattern: params
      - pattern: request
  severity: WARNING
